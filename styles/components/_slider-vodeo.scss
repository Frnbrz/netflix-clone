@use '../abstracts';

.slider-video {
  position: relative;
  width: 100%;


  @media only screen and (min-width: map-get(abstracts.$breakpoints, "medium")) {
    height: 56.25vw;
  }

  @media only screen and (min-width: map-get(abstracts.$breakpoints, "small")) {
    height: 45vw;
  }

  @media only screen and (min-width: map-get(abstracts.$breakpoints, "large")) {
    height: 80vw;
  }



  &__player {
    filter: brightness(50%);
    object-fit: fill;
    width: 100%;

    @media only screen and (min-width: map-get(abstracts.$breakpoints, "medium")) {
      height: 56.25vw;
    }

    @media only screen and (min-width: map-get(abstracts.$breakpoints, "large")) {
      height: 45vw;
    }

    @media only screen and (min-width: map-get(abstracts.$breakpoints, "small")) {
      height: 80vw;
    }
  }

  &__content {
    display: flex;
    flex-direction: column;
    justify-content: flex-end;
    position: absolute;
    width: 100%;
    padding: 1rem;
    z-index: 20;
    top: 20%;

    @media only screen and (min-width: map-get(abstracts.$breakpoints, "large")) {
      width: 50%;
      padding: 0;
      left: 4%;
      top: 10%;
    }

    @media only screen and (min-width: map-get(abstracts.$breakpoints, "small")) {
      top: 10%;
    }

    &__inner {
      padding-top: 6rem;

      @media only screen and (min-width: map-get(abstracts.$breakpoints, "medium")) {
        padding-top: 0;
      }
    }
  }

  &__title {

    font-weight: bold;
    text-shadow: 0 0 10px rgb(abstracts.$black-color, 0.5);

    @media only screen and (min-width: map-get(abstracts.$breakpoints, "medium")) {
      font-size: 3rem;
    }

    @media only screen and (min-width: map-get(abstracts.$breakpoints, "large")) {
      font-size: 4rem;
    }

    @media only screen and (min-width: map-get(abstracts.$breakpoints, "small")) {
      font-size: 2rem;
    }

  }

  &__description {
    max-width: 28rem;
    margin-top: 0.5rem;
    font-size: 0.75rem;

    @media only screen and (min-width: map-get(abstracts.$breakpoints, "medium")) {
      font-size: 0.8rem;
    }
  }

  &__buttons {
    display: flex;
    gap: 1rem;
    margin-top: 1.25rem;
    flex-direction: column;

    @media only screen and (min-width: map-get(abstracts.$breakpoints, "medium")) {
      flex-direction: row;
    }

    @media only screen and (min-width: map-get(abstracts.$breakpoints, "large")) {
      flex-direction: row;
    }

    @media only screen and (min-width: map-get(abstracts.$breakpoints, "small")) {
      flex-direction: column;
    }
  }

  &__gradient {
    background: transparent no-repeat contain;
    width: 100%;
    opacity: 1;
    height: 14.7vw;
    position: absolute;
  }

  &__icon {
    width: 1.5rem;
    height: 1.5rem;
    margin-right: 0.5rem;
    fill: abstracts.$black-color;
  }

  &__button-secondary {
    background-color: abstracts.$button-color-secondary;

    &:hover {
      background-color: rgb(abstracts.$button-color-secondary, 0.8);
    }
  }
}
